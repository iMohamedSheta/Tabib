name: MigrationsTestFlow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, pdo, pdo_mysql, pdo_pgsql, xml, intl, json
          coverage: none
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing.production', '.env');"
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

  migrations:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        database: [mysql, pgsql, sqlite]
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user -d app_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, pdo, pdo_mysql, pdo_pgsql, xml, intl, json
          coverage: none
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing.production', '.env');"
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run Migrations - MySQL
        if: matrix.database == 'mysql'
        run: |
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=app_test" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=password" >> .env
          php artisan migrate --force

      - name: Run Migrations - PostgreSQL
        if: matrix.database == 'pgsql'
        run: |
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=app_test" >> .env
          echo "DB_USERNAME=user" >> .env
          echo "DB_PASSWORD=password" >> .env
          php artisan migrate --force

      - name: Run Migrations - SQLite
        if: matrix.database == 'sqlite'
        run: |
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=/tmp/database.sqlite" >> .env
          touch /tmp/database.sqlite
          php artisan migrate --force

      - name: Set output for migrations
        if: failure()
        run: echo "migrations_failed=true" >> $GITHUB_ENV
        shell: bash

  tests:
    runs-on: ubuntu-latest
    needs: migrations
    if: ${{ env.migrations_failed != 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, pdo, pdo_mysql, pdo_pgsql, xml, intl, json
          coverage: none
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Copy .env.testing file
        run: php -r "copy('.env.testing.production', '.env.testing');file_exists('.env') || copy('.env.testing.production', '.env');"
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Run tests
        id: run_tests
        run: php artisan test
